import React, { useState } from 'react';
import './Page.css';

const moods = [
  { emoji: 'ЁЯШК', label: 'р╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В', value: 'happy' },
  { emoji: 'ЁЯШв', label: 'р╣Ар╕ир╕гр╣Йр╕▓', value: 'sad' },
  { emoji: 'ЁЯШб', label: 'р╣Вр╕Бр╕гр╕Ш', value: 'angry' },
  { emoji: 'ЁЯШ░', label: 'р╕Бр╕▒р╕Зр╕зр╕е', value: 'anxious' },
  { emoji: 'ЁЯШ┤', label: 'р╣Ар╕лр╕Щр╕╖р╣Ир╕нр╕в', value: 'tired' },
  { emoji: 'ЁЯШМ', label: 'р╕Ьр╣Ир╕нр╕Щр╕Др╕ер╕▓р╕в', value: 'relaxed' }
];

const genres = [
  { name: 'р╕Щр╕┤р╕вр╕▓р╕вр╕гр╕▒р╕Б', emoji: 'ЁЯТХ', description: 'р╣Ар╕гр╕╖р╣Ир╕нр╕Зр╕гр╕▓р╕зр╕Др╕зр╕▓р╕бр╕гр╕▒р╕Бр╕Чр╕╡р╣Ир╕нр╕Ър╕нр╕╕р╣Ир╕Щр╣Бр╕ер╕░р╕Щр╣Ир╕▓р╕Ыр╕гр╕░р╕Чр╕▒р╕Ър╣Гр╕И' },
  { emoji: 'ЁЯУЪ', name: 'р╕Юр╕▒р╕Тр╕Щр╕▓р╕Хр╕▒р╕зр╣Ар╕нр╕З', description: 'р╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕нр╕Чр╕╡р╣Ир╕Кр╣Ир╕зр╕вр╕Юр╕▒р╕Тр╕Щр╕▓р╕Чр╕▒р╕Бр╕йр╕░р╣Бр╕ер╕░р╕Др╕зр╕▓р╕бр╕Др╕┤р╕Ф' },
  { emoji: 'ЁЯОн', name: 'р╕Щр╕┤р╕вр╕▓р╕вр╣Бр╕Яр╕Щр╕Хр╕▓р╕Лр╕╡', description: 'р╣Вр╕ер╕Бр╣Бр╕лр╣Ир╕Зр╕Ир╕┤р╕Щр╕Хр╕Щр╕▓р╕Бр╕▓р╕гр╣Бр╕ер╕░р╕Др╕зр╕▓р╕бр╕бр╕лр╕▒р╕ир╕Ир╕гр╕гр╕вр╣М' },
  { emoji: 'ЁЯФН', name: 'р╕кр╕╖р╕Ър╕кр╕зр╕Щр╕кр╕нр╕Ър╕кр╕зр╕Щ', description: 'р╕Ыр╕гр╕┤р╕ир╕Щр╕▓р╣Бр╕ер╕░р╕Др╕зр╕▓р╕бр╕ер╕╢р╕Бр╕ер╕▒р╕Ър╕Чр╕╡р╣Ир╕Хр╣Йр╕нр╕Зр╣Др╕В' },
  { emoji: 'ЁЯМН', name: 'р╕Чр╣Ир╕нр╕Зр╣Ар╕Чр╕╡р╣Ир╕вр╕з', description: 'р╣Ар╕гр╕╖р╣Ир╕нр╕Зр╕гр╕▓р╕зр╕Бр╕▓р╕гр╣Ар╕Фр╕┤р╕Щр╕Чр╕▓р╕Зр╣Бр╕ер╕░р╕Бр╕▓р╕гр╕Ьр╕Ир╕Нр╕ар╕▒р╕в' },
  { emoji: 'ЁЯОи', name: 'р╕ир╕┤р╕ер╕Ыр╕░р╣Бр╕ер╕░р╕Др╕зр╕▓р╕бр╕Др╕┤р╕Фр╕кр╕гр╣Йр╕▓р╕Зр╕кр╕гр╕гр╕Др╣М', description: 'р╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕нр╕Чр╕╡р╣Ир╕Кр╣Ир╕зр╕вр╕Ыр╕ер╕╕р╕Бр╕Др╕зр╕▓р╕бр╕Др╕┤р╕Фр╕кр╕гр╣Йр╕▓р╕Зр╕кр╕гр╕гр╕Др╣М' }
];

const BookPage = () => {
  const [selectedMood, setSelectedMood] = useState(null);
  const [selectedGenre, setSelectedGenre] = useState(null);
  const [recommendations, setRecommendations] = useState(null);

  const handleMoodSelect = (mood) => {
    setSelectedMood(mood);
  };

  const handleGenreSelect = (genre) => {
    setSelectedGenre(genre);
    // р╕кр╕бр╕бр╕Хр╕┤р╕зр╣Ир╕▓р╕бр╕╡р╕Бр╕▓р╕гр╣Ар╕гр╕╡р╕вр╕Б API р╣Ар╕Юр╕╖р╣Ир╕нр╕Фр╕╢р╕Зр╕Др╕│р╣Бр╕Щр╕░р╕Щр╕│р╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕н
    setRecommendations([
      {
        title: 'р╕Кр╕╖р╣Ир╕нр╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕нр╕Чр╕╡р╣И 1',
        author: 'р╕Ьр╕╣р╣Йр╣Ар╕Вр╕╡р╕вр╕Щ 1',
        description: 'р╕Др╕│р╕нр╕Шр╕┤р╕Ър╕▓р╕вр╕кр╕▒р╣Йр╕Щр╣Ж р╣Ар╕Бр╕╡р╣Ир╕вр╕зр╕Бр╕▒р╕Ър╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕нр╣Ар╕ер╣Ир╕бр╕Щр╕╡р╣Й',
        rating: 'тнРя╕ПтнРя╕ПтнРя╕ПтнРя╕ПтнРя╕П'
      },
      {
        title: 'р╕Кр╕╖р╣Ир╕нр╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕нр╕Чр╕╡р╣И 2',
        author: 'р╕Ьр╕╣р╣Йр╣Ар╕Вр╕╡р╕вр╕Щ 2',
        description: 'р╕Др╕│р╕нр╕Шр╕┤р╕Ър╕▓р╕вр╕кр╕▒р╣Йр╕Щр╣Ж р╣Ар╕Бр╕╡р╣Ир╕вр╕зр╕Бр╕▒р╕Ър╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕нр╣Ар╕ер╣Ир╕бр╕Щр╕╡р╣Й',
        rating: 'тнРя╕ПтнРя╕ПтнРя╕ПтнРя╕П'
      },
      {
        title: 'р╕Кр╕╖р╣Ир╕нр╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕нр╕Чр╕╡р╣И 3',
        author: 'р╕Ьр╕╣р╣Йр╣Ар╕Вр╕╡р╕вр╕Щ 3',
        description: 'р╕Др╕│р╕нр╕Шр╕┤р╕Ър╕▓р╕вр╕кр╕▒р╣Йр╕Щр╣Ж р╣Ар╕Бр╕╡р╣Ир╕вр╕зр╕Бр╕▒р╕Ър╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕нр╣Ар╕ер╣Ир╕бр╕Щр╕╡р╣Й',
        rating: 'тнРя╕ПтнРя╕ПтнРя╕ПтнРя╕ПтнРя╕П'
      }
    ]);
  };

  return (
    <div className="book-container">
      <section className="book-section">
        <h1>р╣Бр╕Щр╕░р╕Щр╕│р╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕н</h1>
        <p className="description">р╣Ар╕ер╕╖р╕нр╕Бр╕нр╕▓р╕гр╕бр╕Ур╣Мр╣Бр╕ер╕░р╕Ыр╕гр╕░р╣Ар╕ар╕Чр╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕нр╕Чр╕╡р╣Ир╕Др╕╕р╕Ур╕кр╕Щр╣Гр╕И</p>
        
        <div className="mood-selection">
          <h2>р╕зр╕▒р╕Щр╕Щр╕╡р╣Йр╕Др╕╕р╕Ур╕гр╕╣р╣Йр╕кр╕╢р╕Бр╕нр╕вр╣Ир╕▓р╕Зр╣Др╕г?</h2>
          <div className="mood-grid">
            {moods.map((mood) => (
              <button
                key={mood.value}
                className={`mood-button ${selectedMood === mood ? 'selected' : ''}`}
                onClick={() => handleMoodSelect(mood)}
              >
                <span className="emoji">{mood.emoji}</span>
                <span className="label">{mood.label}</span>
              </button>
            ))}
          </div>
        </div>

        <div className="genre-selection">
          <h2>р╕Ыр╕гр╕░р╣Ар╕ар╕Чр╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕нр╕Чр╕╡р╣Ир╕Др╕╕р╕Ур╕кр╕Щр╣Гр╕И</h2>
          <div className="genre-grid">
            {genres.map((genre) => (
              <button
                key={genre.name}
                className={`genre-button ${selectedGenre === genre ? 'selected' : ''}`}
                onClick={() => handleGenreSelect(genre)}
              >
                <span className="emoji">{genre.emoji}</span>
                <span className="name">{genre.name}</span>
                <span className="description">{genre.description}</span>
              </button>
            ))}
          </div>
        </div>

        {recommendations && (
          <div className="recommendations">
            <h2>р╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕нр╣Бр╕Щр╕░р╕Щр╕│р╕кр╕│р╕лр╕гр╕▒р╕Ър╕Др╕╕р╕У</h2>
            <div className="books-grid">
              {recommendations.map((book, index) => (
                <div key={index} className="book-card">
                  <div className="book-header">
                    <h3>{book.title}</h3>
                    <span className="rating">{book.rating}</span>
                  </div>
                  <p className="author">р╣Вр╕Фр╕в {book.author}</p>
                  <p className="book-description">{book.description}</p>
                </div>
              ))}
            </div>
          </div>
        )}
      </section>
    </div>
  );
};

export default BookPage;